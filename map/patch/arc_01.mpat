#define .NpcID:NPC_Partner_BeforeBattle               00

#new:Function $Function_ForcePartnerSwap {
    ADDIU     SP, SP, -18
    SW        RA, 10 (SP)
    LW        V0, C (A0)
    JAL       ~Func:get_variable
    LW        A1, 0 (V0)
    JAL       ~Func:switch_to_partner
    DADDU     A0, V0, R0
    LW        RA, 10 (SP)
    ADDIU     V0, R0, 2
    JR        RA
    ADDIU     SP, SP, 18
}

@ $Script_Main
{
	Set   *GB_WorldLocation  .Location:GoombaRoad
	Call  SetCamPerspective  ( .Cam:Default 00000003 00000019 00000010 00001000 )
	Call  SetCamBGColor      ( .Cam:Default 00000000 00000000 00000000 )
	Call  SetCamEnabled      ( .Cam:Default .True )
	Call  SetCamLeadPlayer   ( .Cam:Default .False )
	Exec  $Script_MakeEntities
	Exec  $Script_SetupMusic
	Exec  $Script_SetupTexturePan
	Exec  $Script_BindFoliage
    Exec  $Script_BoatBop
    If *MF_SpearGuy_Joined_Party == .False
        Call MakeNpcs  ( .False $NpcGroupList_SpearGuy )
    EndIf
	Exec  $Script_EnterMap
    Bind  $Script_BoatLeave .Trigger:WallPressA ~Collider:BoatInteractColl 00000001 00000000
	Return
	End
}

@ $Script_EnterMap
{
    Call  GetLoadType   ( *Var[0] )
	If  *Var[0]  ==  1
		Exec  EnterSavePoint
		Exec $Script_CreateExitTriggers
		Return
	EndIf
	Call  GetEntryID    ( *Var[0] )
	Switch  *Var[0]
		Case  ==  ~Entry:Entry0
			Set   *Var[0] $Script_CreateExitTriggers
			Exec  EnterWalk
        Case  ==  ~Entry:Entry1
            Exec $Script_EntryFromBoat
            Exec $Script_CreateExitTriggers
		Default
			Exec  $Script_CreateExitTriggers
	EndSwitch
	Return
	End
}

#new:Script $Script_BoatBop {
    Call ParentColliderToModel ( ~Collider:BoatColl ~Model:Boat_Body )
    Loop
        Set   *Var0  00000000
            Loop  5` %Change this and the other loop to the amount of units you want the boat to move Y
                Add   *Var0  00000001
                Call  TranslateGroup    ( ~Model:Boat_Group 00000000 *Var0 00000000 ) %Change these models to your models
                Call UpdateColliderTransform ( ~Collider:BoatColl )
                Wait  3`
            EndLoop
            Wait 6`
            Set *Var1 *Var0
            Loop  5` %Change this and the other loop to the amount of units you want the boat to move Y
                Sub   *Var1  00000001
                Call  TranslateGroup    ( ~Model:Boat_Group 00000000 *Var1 00000000 ) %Change these models to your models
                Call UpdateColliderTransform ( ~Collider:BoatColl )
                Wait  3`
              EndLoop
            Wait 8`
        EndLoop
    Return
    End
}

#new:Script $Script_EntryFromBoat
{
    Call DisablePlayerInput ( .True )
    Wait 5`
    Call SetPlayerJumpscale ( *Fixed[1.0] )
    Call PlayerJump ( ~Vec3D:MarioLeaveBoatJump 15` )
    Call DisablePlayerInput ( .False )
    Return
    End
}

#new:Script $Script_BoatLeave
{
    Call DisablePlayerInput ( .True )
    Call ShowMessageAtScreenPos ( 00300000 000000A0 00000000 )
    Call ShowChoice ( 001E0004 )
    Switch *Var0
        Case == 0 % Yes
            Call CloseChoice ()
            Call CloseMessage ()
            Call SetPlayerJumpscale ( *Fixed[1.0] )
            Thread
                Call GotoMap ( "arc_00" 00000000 )
            EndThread
            Call PlayerJump ( ~Vec3D:Entry1 15` )
        Case == 1 % No
            Call CloseChoice ()
            Call CloseMessage ()
            Call DisablePlayerInput ( .False )
    EndSwitch
    Return
    End
}

@ $Script_Foliage_ShakeTree
{
    0:  SetTimescale  *Fixed[2.0]
    C:  UseIntBuffer  *Var[0]
   18:  Get4Int  *Var[1] *Var[2] *Var[3] *Var[4]
   30:  Get1Int  *Var[5]
   3C:  Call  GetPlayerPos  ( *Var[6] *Var[F] *Var[8] )
   54:  Call  PlaySound     ( 00000165 )
   64:  Call  PlaySound     ( 00000166 )
   74:  Thread
   7C:      Set   *Flag[00]  .False
   8C:      If  *Var[1]  !=  00000000
   9C:          Wait  1`
   A8:          Loop  00000005
   B4:              UseIntBuffer  *Var[1]
   C0:              Get1Int  *Var[2]
   CC:              Loop  *Var[2]
   D8:                  Get1Int  *Var[3]
   E4:                  Call  $Function_Foliage_TransformModel    ( *Var[3] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
  104:                  If  *Flag[00]  ==  .False
  114:                      Set   *Flag[00]  .True
  124:                      Call  PlaySoundAtModel  ( *Var[3] 00000166 00000000 )
  13C:                  EndIf
  144:              EndLoop
  14C:              Wait  1`
  158:              UseIntBuffer  *Var[1]
  164:              Get1Int  *Var[2]
  170:              Loop  *Var[2]
  17C:                  Get1Int  *Var[3]
  188:                  Call  $Function_Foliage_TransformModel    ( *Var[3] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
  1A8:              EndLoop
  1B0:              Wait  1`
  1BC:          EndLoop
  1C4:          UseIntBuffer  *Var[1]
  1D0:          Get1Int  *Var[2]
  1DC:          Loop  *Var[2]
  1E8:              Get1Int  *Var[3]
  1F4:              Call  TranslateModel    ( *Var[3] 00000000 00000000 00000000 )
  210:          EndLoop
  218:          Wait  1`
  224:      EndIf
  22C:  EndThread
  234:  Thread
  23C:      Set   *Flag[00]  .False
  24C:      If  *Var[2]  !=  00000000
  25C:          Loop  00000005
  268:              UseIntBuffer  *Var[2]
  274:              Get1Int  *Var[3]
  280:              Loop  *Var[3]
  28C:                  Get1Int  *Var[4]
  298:                  Call  $Function_Foliage_TransformModel    ( *Var[4] *Fixed[0.1] *Fixed[0.2] *Var[F] 00000000 )
  2B8:                  If  *Flag[00]  ==  .False
  2C8:                      Set   *Flag[00]  .True
  2D8:                      Call  PlaySoundAtModel  ( *Var[4] 00000165 00000000 )
  2F0:                  EndIf
  2F8:              EndLoop
  300:              Wait  1`
  30C:              UseIntBuffer  *Var[2]
  318:              Get1Int  *Var[3]
  324:              Loop  *Var[3]
  330:                  Get1Int  *Var[4]
  33C:                  Call  $Function_Foliage_TransformModel    ( *Var[4] *Fixed[0.1] *Fixed[-0.2] *Var[F] 00000000 )
  35C:              EndLoop
  364:              Wait  1`
  370:          EndLoop
  378:          UseIntBuffer  *Var[2]
  384:          Get1Int  *Var[3]
  390:          Loop  *Var[3]
  39C:              Get1Int  *Var[4]
  3A8:              Call  TranslateModel    ( *Var[4] 00000000 00000000 00000000 )
  3C4:          EndLoop
  3CC:          Wait  1`
  3D8:      EndIf
  3E0:  EndThread
  3E8:  Thread
  3F0:      If  *Var[3]  !=  00000000
  400:          UseIntBuffer  *Var[3]
  40C:          Get1Int  *Var[4]
  418:          Loop  *Var[4]
  424:              Get1Int  *Var[5]
  430:              Get3Int  *Var[6] *Var[7] *Var[8]
  444:              Get3Int  *Var[9] *Var[A] *Var[B]
  458:              If  *Var[B]  ==  00000000
  468:                  Call  DropItemEntity    ( *Var[5] *Var[6] *Var[7] *Var[8] 00000007 *Var[A] )
  48C:              Else
  494:                  Call  GetValueByRef ( *Var[B] *Var[C] )
  4A8:                  If  *Var[C]  ==  00000000
  4B8:                      Call  SetValueByRef     ( *Var[B] 00000001 )
  4CC:                      Call  DropItemEntity    ( *Var[5] *Var[6] *Var[7] *Var[8] 00000007 *Var[A] )
  4F0:                  EndIf
  4F8:              EndIf
  500:          EndLoop
  508:      EndIf
  510:  EndThread
  518:  Thread
  520:      If  *Var[4]  !=  00000000
  530:          UseIntBuffer  *Var[4]
  53C:          Get1Int  *Var[5]
  548:          Loop  *Var[5]
  554:              Get3Int  *Var[6] *Var[7] *Var[8]
  568:              Call  PlayEffect    ( ~FX:DropLeaves:Random *Var[6] *Var[7] *Var[8] 00000064 00000000 00000000 00000000 00000000 00000000 00000000 00000000 00000000 )
  5AC:          EndLoop
  5B4:      EndIf
  5BC:  EndThread
  5C4:  If  *Var[5]  !=  00000000
  5D4:      ExecWait  *Var[5]
  5E0:  EndIf
  5E8:  Wait  15`
  5F4:  Return
  5FC:  End
}

#new:NpcGroupList $NpcGroupList_SpearGuy
{
	00000001 $NpcGroup_SpearGuy 00000000
	00000000 00000000 00000000
}

#new:NpcGroup $NpcGroup_SpearGuy
{
	.NpcID:NPC_Partner_BeforeBattle $NpcSettings_8024EC90 ~Vec3f:NPC_Partner_BeforeBattle % -150 0 -275
	00112D09 $Script_Init_80250EE4 00000000 00000000 0000005A
	~NoDrops
	~Movement:NPC_Partner_BeforeBattle
	~AnimationTable:NPC_Partner_BeforeBattle % .Sprite:Toad
	00000000 00000000 00000000 001A0013 % This Toad is always standing in front of the gate. ...
}

#new:NpcSettings $NpcSettings_8024EC90
{
	00000000 001E0018 00000000 00000000 00000000 00000000 00000000 00000000
	00000000 00000000 00630000
}

#new:Script $Script_Init_80250EE4
{
    Call BindNpcIdle ( .Npc:Self $Script_Find_SpearGuy )
    Return
    End
}

#new:Script $Script_Find_SpearGuy
{
    Call SetNpcYaw ( .Npc:Self 127` )
    Loop
        Call GetPlayerPos ( *Var0 0` 0` )
        If *Var0 > -168`
            BreakLoop
        EndIf
        Wait 1`
    EndLoop
    Call DisablePlayerInput ( .True )
    ExecWait $Script_PanCamera_Cam_Pan_SpearGuyCutscene_1
    Call SetPlayerPos ( ~Vec3D:MarioCutscenePos )
    Call GetPlayerPos ( *Var0 *Var1 *Var2 )
    Add *Var0 165`
    Add *Var2 10`
    Wait 15`
    Thread
        Wait 25`
        Call PlaySoundAtNpc ( .Npc:Self 00000262 00000000 )
        Call ShowEmote     ( .Npc:Self .Emote:Exclamation  0`  -45` .True  0`  0`  0`  0` )
        Call NpcFacePlayer ( .Npc:Self 10` )
    EndThread
    Call PlayerMoveTo ( *Var0 *Var2 55` )
    ExecWait $Script_PanCamera_Cam_Pan_SpearGuyCutscene_2
    Call StartBossBattle ( .Song:MinibossBattle )
    Return
    End
}